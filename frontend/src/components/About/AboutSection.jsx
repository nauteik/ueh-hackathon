import React, { useEffect, useState } from 'react'
import {
  Box,
  Container,
  Typography,
  Card,
  CardContent,
  Grid,
  Fade,
  Grow,
  Avatar,
  Paper
} from '@mui/material'
import { styled } from '@mui/material/styles'

// Styled Components
const FullWidthSection = styled(Box)(({ backgroundImage }) => ({
  minHeight: '100vh',
  width: '100vw',
  position: 'relative',
  backgroundImage: `url("${backgroundImage}")`,
  backgroundSize: 'cover',
  backgroundPosition: 'center',
  backgroundRepeat: 'no-repeat',
  backgroundAttachment: 'fixed',
  display: 'flex',
  alignItems: 'center',
  overflow: 'hidden',
  '&::before': {
    content: '""',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    background: 'linear-gradient(135deg, rgba(26, 77, 58, 0.8) 0%, rgba(15, 61, 42, 0.9) 100%)',
    zIndex: 1
  }
}))

const ContentOverlay = styled(Container)(({ theme }) => ({
  position: 'relative',
  zIndex: 2,
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'center',
  minHeight: '100vh',
  padding: theme.spacing(8, 2)
}))

const GlassCard = styled(Card)(({ theme }) => ({
  background: 'rgba(255, 255, 255, 0.1)',
  backdropFilter: 'blur(20px)',
  border: '2px solid rgba(249, 185, 73, 0.3)',
  borderRadius: '24px',
  padding: theme.spacing(4),
  margin: theme.spacing(2, 0),
  transition: 'all 0.3s ease',
  '&:hover': {
    transform: 'scale(1.02)',
    borderColor: '#F9B949',
    boxShadow: '0 20px 40px rgba(249, 185, 73, 0.2)'
  }
}))

const StatBox = styled(Paper)(({ theme }) => ({
  background: 'linear-gradient(135deg, rgba(185, 28, 28, 0.9) 0%, rgba(139, 0, 0, 0.9) 100%)',
  backdropFilter: 'blur(10px)',
  border: '2px solid rgba(249, 185, 73, 0.4)',
  borderRadius: '16px',
  padding: theme.spacing(3),
  textAlign: 'center',
  transition: 'all 0.3s ease',
  height: '100%',
  '&:hover': {
    transform: 'translateY(-8px)',
    borderColor: '#F9B949',
    boxShadow: '0 15px 30px rgba(249, 185, 73, 0.3)'
  }
}))

const AboutSection = () => {
  const [isVisible, setIsVisible] = useState(false)

  useEffect(() => {
    setIsVisible(true)
  }, [])

  // Section data
  const sections = [
    {
      id: 'heritage',
      backgroundImage: '/background1.jpg',
      title: 'Di s·∫£n vƒÉn h√≥a ng√†n nƒÉm',
      subtitle: 'R·ªëi n∆∞·ªõc - Ngh·ªá thu·∫≠t ƒë·ªôc ƒë√°o c·ªßa Vi·ªát Nam',
      content: {
        mainText: 'Ngh·ªá thu·∫≠t m√∫a r·ªëi n∆∞·ªõc Vi·ªát Nam l√† m·ªôt trong nh·ªØng h√¨nh th·ª©c bi·ªÉu di·ªÖn ngh·ªá thu·∫≠t ƒë·ªôc ƒë√°o v√† c·ªï x∆∞a nh·∫•t tr√™n th·∫ø gi·ªõi. V·ªõi l·ªãch s·ª≠ h∆°n 1000 nƒÉm, ngh·ªá thu·∫≠t n√†y ƒë√£ tr·ªü th√†nh bi·ªÉu t∆∞·ª£ng vƒÉn h√≥a ƒë·∫∑c tr∆∞ng c·ªßa d√¢n t·ªôc Vi·ªát Nam.',
        highlights: [
          { number: '1000+', label: 'NƒÉm l·ªãch s·ª≠', description: 'ƒê∆∞·ª£c ghi nh·∫≠n t·ª´ th·∫ø k·ª∑ XI' },
          { number: '30+', label: 'Ti·∫øt m·ª•c truy·ªÅn th·ªëng', description: 'ƒêa d·∫°ng c√¢u chuy·ªán d√¢n gian' },
          { number: '40+', label: 'Qu·ªëc gia bi·ªÉu di·ªÖn', description: 'ƒê∆∞·ª£c y√™u th√≠ch tr√™n to√†n th·∫ø gi·ªõi' }
        ]
      }
    },
    {
      id: 'tradition',
      backgroundImage: '/background2.jpg',
      title: 'Truy·ªÅn th·ªëng v√† k·ªπ thu·∫≠t',
      subtitle: 'B·∫£o t·ªìn v√† ph√°t tri·ªÉn ngh·ªá thu·∫≠t',
      content: {
        mainText: 'Ngh·ªá thu·∫≠t r·ªëi n∆∞·ªõc kh√¥ng ch·ªâ l√† m√†n bi·ªÉu di·ªÖn gi·∫£i tr√≠ m√† c√≤n l√† kho t√†ng tri th·ª©c v·ªÅ l·ªãch s·ª≠, vƒÉn h√≥a v√† ƒë·ªùi s·ªëng c·ªßa ng∆∞·ªùi Vi·ªát. M·ªói ti·∫øt m·ª•c ƒë·ªÅu mang trong m√¨nh nh·ªØng c√¢u chuy·ªán √Ω nghƒ©a v·ªÅ cu·ªôc s·ªëng n√¥ng th√¥n, t√¨nh y√™u qu√™ h∆∞∆°ng v√† truy·ªÅn th·ªëng vƒÉn h√≥a d√¢n t·ªôc.',
        features: [
          {
            title: 'K·ªπ thu·∫≠t ƒëi·ªÅu khi·ªÉn tinh x·∫£o',
            description: 'Ngh·ªá nh√¢n s·ª≠ d·ª•ng h·ªá th·ªëng d√¢y v√† c·∫ßn c√¢u ph·ª©c t·∫°p ƒë·ªÉ ƒëi·ªÅu khi·ªÉn c√°c con r·ªëi tr√™n m·∫∑t n∆∞·ªõc, t·∫°o ra nh·ªØng ƒë·ªông t√°c m∆∞·ª£t m√† v√† s·ªëng ƒë·ªông.'
          },
          {
            title: '√Çm nh·∫°c truy·ªÅn th·ªëng',
            description: 'K·∫øt h·ª£p v·ªõi c√°c nh·∫°c c·ª• d√¢n t·ªôc nh∆∞ tr·ªëng, chi√™ng, ƒë√†n b·∫ßu, s√°o tr√∫c ƒë·ªÉ t·∫°o n√™n b·∫£n giao h∆∞·ªüng vƒÉn h√≥a ƒë·∫ßy c·∫£m x√∫c.'
          },
          {
            title: 'Trang ph·ª•c v√† ƒë·∫°o c·ª•',
            description: 'M·ªói con r·ªëi ƒë·ªÅu ƒë∆∞·ª£c ch·∫ø t√°c t·ªâ m·ªâ v·ªõi trang ph·ª•c m√†u s·∫Øc r·ª±c r·ª°, th·ªÉ hi·ªán ƒë·∫∑c tr∆∞ng vƒÉn h√≥a v√† t√≠nh c√°ch c·ªßa t·ª´ng nh√¢n v·∫≠t.'
          }
        ]
      }
    },
    {
      id: 'mission',
      backgroundImage: '/muaroi.jpg',
      title: 'S·ª© m·ªánh v√† t·∫ßm nh√¨n',
      subtitle: 'K·∫øt n·ªëi qu√° kh·ª© v·ªõi t∆∞∆°ng lai',
      content: {
        mainText: 'Ch√∫ng t√¥i cam k·∫øt b·∫£o t·ªìn v√† ph√°t tri·ªÉn ngh·ªá thu·∫≠t r·ªëi n∆∞·ªõc truy·ªÅn th·ªëng, ƒë·ªìng th·ªùi ·ª©ng d·ª•ng c√¥ng ngh·ªá hi·ªán ƒë·∫°i ƒë·ªÉ t·∫°o ra nh·ªØng tr·∫£i nghi·ªám m·ªõi m·∫ª v√† h·∫•p d·∫´n cho th·∫ø h·ªá tr·∫ª.',
        mission: [
          {
            icon: 'üé≠',
            title: 'B·∫£o t·ªìn di s·∫£n',
            description: 'G√¨n gi·ªØ v√† truy·ªÅn l·∫°i ngh·ªá thu·∫≠t r·ªëi n∆∞·ªõc cho th·∫ø h·ªá t∆∞∆°ng lai'
          },
          {
            icon: 'üåü',
            title: 'ƒê·ªïi m·ªõi s√°ng t·∫°o',
            description: 'K·∫øt h·ª£p truy·ªÅn th·ªëng v·ªõi c√¥ng ngh·ªá ƒë·ªÉ t·∫°o ra tr·∫£i nghi·ªám m·ªõi'
          },
          {
            icon: 'üåç',
            title: 'Qu·∫£ng b√° vƒÉn h√≥a',
            description: 'Gi·ªõi thi·ªáu ngh·ªá thu·∫≠t Vi·ªát Nam ra th·∫ø gi·ªõi'
          },
          {
            icon: 'üë•',
            title: 'Gi√°o d·ª•c c·ªông ƒë·ªìng',
            description: 'N√¢ng cao nh·∫≠n th·ª©c v·ªÅ gi√° tr·ªã vƒÉn h√≥a truy·ªÅn th·ªëng'
          }
        ]
      }
    }
  ]

  return (
    <Box sx={{ width: '100vw', overflow: 'hidden' }}>
      {sections.map((section, index) => (
        <FullWidthSection
          key={section.id}
          backgroundImage={section.backgroundImage}
        >
          <ContentOverlay maxWidth="xl">
            <Fade in={isVisible} timeout={1000 + index * 500}>
              <Box>
                {/* Section Header */}
                <Box textAlign="center" mb={8}>
                  <Typography
                    variant="h2"
                    component="h1"
                    sx={{
                      fontSize: { xs: '2.5rem', md: '4rem' },
                      fontWeight: 'bold',
                      mb: 2,
                      fontFamily: 'Playfair Display, serif',
                      color: '#F9B949',
                      textShadow: '2px 2px 4px rgba(0,0,0,0.5)'
                    }}
                  >
                    {section.title}
                  </Typography>
                  <Typography
                    variant="h4"
                    sx={{
                      color: 'white',
                      fontWeight: 300,
                      textShadow: '1px 1px 2px rgba(0,0,0,0.5)'
                    }}
                  >
                    {section.subtitle}
                  </Typography>
                </Box>

                {/* Section Content */}
                {section.id === 'heritage' && (
                  <Grid container spacing={4} alignItems="center">
                    <Grid item xs={12} md={6}>
                      <GlassCard>
                        <CardContent>
                          <Typography
                            variant="h5"
                            component="p"
                            sx={{
                              color: 'white',
                              lineHeight: 1.8,
                              fontSize: { xs: '1.1rem', md: '1.3rem' }
                            }}
                          >
                            {section.content.mainText}
                          </Typography>
                        </CardContent>
                      </GlassCard>
                    </Grid>
                    <Grid item xs={12} md={6}>
                      <Grid container spacing={3}>
                        {section.content.highlights.map((stat, idx) => (
                          <Grid item xs={12} sm={4} md={12} key={idx}>
                            <Grow in={isVisible} timeout={1500 + idx * 300}>
                              <StatBox>
                                <Typography
                                  variant="h3"
                                  sx={{ color: '#F9B949', fontWeight: 'bold', mb: 1 }}
                                >
                                  {stat.number}
                                </Typography>
                                <Typography
                                  variant="h6"
                                  sx={{ color: 'white', fontWeight: 600, mb: 1 }}
                                >
                                  {stat.label}
                                </Typography>
                                <Typography
                                  variant="body2"
                                  sx={{ color: 'rgba(255,255,255,0.8)' }}
                                >
                                  {stat.description}
                                </Typography>
                              </StatBox>
                            </Grow>
                          </Grid>
                        ))}
                      </Grid>
                    </Grid>
                  </Grid>
                )}

                {section.id === 'tradition' && (
                  <Grid container spacing={4}>
                    <Grid item xs={12} md={6}>
                      <GlassCard>
                        <CardContent>
                          <Typography
                            variant="h5"
                            component="p"
                            sx={{
                              color: 'white',
                              lineHeight: 1.8,
                              fontSize: { xs: '1.1rem', md: '1.3rem' },
                              mb: 3
                            }}
                          >
                            {section.content.mainText}
                          </Typography>
                        </CardContent>
                      </GlassCard>
                    </Grid>
                    <Grid item xs={12} md={6}>
                      <Grid container spacing={3}>
                        {section.content.features.map((feature, idx) => (
                          <Grid item xs={12} key={idx}>
                            <Grow in={isVisible} timeout={1500 + idx * 300}>
                              <GlassCard>
                                <CardContent>
                                  <Typography
                                    variant="h6"
                                    sx={{ color: '#F9B949', fontWeight: 'bold', mb: 2 }}
                                  >
                                    {feature.title}
                                  </Typography>
                                  <Typography
                                    variant="body1"
                                    sx={{ color: 'rgba(255,255,255,0.9)', lineHeight: 1.6 }}
                                  >
                                    {feature.description}
                                  </Typography>
                                </CardContent>
                              </GlassCard>
                            </Grow>
                          </Grid>
                        ))}
                      </Grid>
                    </Grid>
                  </Grid>
                )}

                {section.id === 'mission' && (
                  <Grid container spacing={4}>
                    <Grid item xs={12} md={6}>
                      <GlassCard>
                        <CardContent>
                          <Typography
                            variant="h5"
                            component="p"
                            sx={{
                              color: 'white',
                              lineHeight: 1.8,
                              fontSize: { xs: '1.1rem', md: '1.3rem' }
                            }}
                          >
                            {section.content.mainText}
                          </Typography>
                        </CardContent>
                      </GlassCard>
                    </Grid>
                    <Grid item xs={12} md={6}>
                      <Grid container spacing={3}>
                        {section.content.mission.map((item, idx) => (
                          <Grid item xs={12} sm={6} key={idx}>
                            <Grow in={isVisible} timeout={1500 + idx * 200}>
                              <GlassCard sx={{ height: '100%' }}>
                                <CardContent sx={{ textAlign: 'center' }}>
                                  <Avatar
                                    sx={{
                                      width: 60,
                                      height: 60,
                                      mx: 'auto',
                                      mb: 2,
                                      background: 'linear-gradient(135deg, #F9B949, #EAB308)',
                                      fontSize: '1.5rem'
                                    }}
                                  >
                                    {item.icon}
                                  </Avatar>
                                  <Typography
                                    variant="h6"
                                    sx={{ color: '#F9B949', fontWeight: 'bold', mb: 1 }}
                                  >
                                    {item.title}
                                  </Typography>
                                  <Typography
                                    variant="body2"
                                    sx={{ color: 'rgba(255,255,255,0.9)', lineHeight: 1.5 }}
                                  >
                                    {item.description}
                                  </Typography>
                                </CardContent>
                              </GlassCard>
                            </Grow>
                          </Grid>
                        ))}
                      </Grid>
                    </Grid>
                  </Grid>
                )}
              </Box>
            </Fade>
          </ContentOverlay>
        </FullWidthSection>
      ))}
    </Box>
  )
}

export default AboutSection
